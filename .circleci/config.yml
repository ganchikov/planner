defaults: &defaults 
  docker:
  - image: circleci/node:8.9.4-browsers  
  working_directory: ~/repo
version: 2
jobs:
  build-job:
    <<: *defaults  
    steps:
      - checkout
      - run: 
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: 
          name: install-npm-wee
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ./
          paths: 
            - ./
  test-job:
    <<: *defaults
    environment:
      - NODE_ENV: "test"
    steps:
      - run:
          name: 'create build folder'
          command: 'mkdir build'
      - attach_workspace:
          at: ~/repo/build
    # run tests!
      - run: 
          name: test
          command: |
            cd build
            npm run test_headless
  increment-build-job:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "03:8e:45:bf:ce:91:71:70:00:18:d6:f5:d0:c6:79:b4"
      - checkout
      - run: 
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: 
          name: install-npm-wee
          command: npm install
      - run:
          name: 'install jq'
          command: 'sudo apt-get install jq'
      - run:
          name: 'update build #'    
          command: |
            if [ $CIRCLE_BRANCH == "master" ]; then
              node node_modules/appversion/apv update build             
              #extract tag data
              TAG=$(jq '[.version.major , .version.minor, .version.patch, .build.number | tostring] | join (".")' appversion.json)
              #remove first-last double quotes
              TAG=$(sed -e 's/^"//' -e 's/"$//' <<<$TAG)    
              git add .
              git commit -m "${TAG} CI build version update [skip ci]"
              git push
            fi
  tag-build-job:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "03:8e:45:bf:ce:91:71:70:00:18:d6:f5:d0:c6:79:b4"
      - checkout
      - run: 
          name: update-npm
          command: 'sudo npm install -g npm@latest'
           # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: 
          name: install-npm-wee
          command: npm install
      - run:
          name: 'tag build'    
          command: |
            if [ $CIRCLE_BRANCH == "master" ]; then
              #extract tag data
              TAG=$(jq '[.version.major , .version.minor, .version.patch, .build.number | tostring] | join (".")' appversion.json)
              #remove first-last double quotes
              TAG=$(sed -e 's/^"//' -e 's/"$//' <<<$TAG)    
              git tag -a $TAG -m 'CI build'
              git push --tags              
            fi
  deploy-firebase-stage-job:
    <<: *defaults
    steps:
      # - add_ssh_keys:
      #     fingerprints:
      #       - "5b:c6:98:ba:8b:54:f0:60:12:00:57:80:f8:da:65:74"
      #       - "b1:1c:98:9f:4d:d1:ff:2b:09:5d:81:70:8b:87:b0:f8"
      - run:
          name: 'install firebase-tools'
          command: 'sudo npm install -g firebase-tools'
      - run:
          name: 'create build folder'
          command: 'mkdir build'
      - attach_workspace:
          at: ~/repo/build
      
      - run:
          name: 'Deploy Master to Firebase'
          command: |
            cd build
            npm run build
            firebase use default --token "$FIREBASE_DEPLOY_TOKEN"
            firebase deploy --token "$FIREBASE_DEPLOY_TOKEN"
  deploy-firebase-prod-job:
    <<: *defaults
    steps:
      # - add_ssh_keys:
      #     fingerprints:
      #       - "5b:c6:98:ba:8b:54:f0:60:12:00:57:80:f8:da:65:74"
      #       - "b1:1c:98:9f:4d:d1:ff:2b:09:5d:81:70:8b:87:b0:f8"
      - run:
          name: 'install firebase-tools'
          command: 'sudo npm install -g firebase-tools'
      - run:
          name: 'create build folder'
          command: 'mkdir build'
      - attach_workspace:
          at: ~/repo/build
      - run:
          name: 'Deploy Master to Firebase'
          command: |
            cd build
            npm run build
            firebase use prod --token "$FIREBASE_DEPLOY_TOKEN"
            firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

workflows:
  version: 2

  commit:
    jobs:
      - build-job
      - test-job:
          requires:
            - build-job
      - increment-build-job:
          requires:
            - test-job
      - tag-build-job:
          requires:
            - increment-build-job            
      - deploy-firebase-stage-job:
          requires: 
            - increment-build-job
          filters:
            branches:
              only:                 
                - master 
  nightly_build:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-job
      - test-job:
          requires: 
            - build-job
      - tag-build-job:
          requires:
            - test-job
      - deploy-firebase-stage-job:
          requires: 
            - test-job
          filters:
            branches:
              only:                 
                - master    
      - hold:
          type: approval
          requires: 
            - test-job
      - deploy-firebase-prod-job:
          requires:
            - hold
          filters:
            branches:
              only:
                - master
      
  